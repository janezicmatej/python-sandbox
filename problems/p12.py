# Problem number 12
#
# The sequence of triangle numbers is generated by adding the natural numbers. So the
# 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would
# be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# Â 1: 1Â 3: 1,3Â 6: 1,2,3,610: 1,2,5,1015: 1,3,5,1521: 1,3,7,2128: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
from fwk.solution import Problem
from typing import Iterator
from utils.extended_math import factors, natural_numbers


def triangle_numbers() -> Iterator[int]:
    s = 0
    for i in natural_numbers():
        s += i
        yield s


class Main(Problem):
    @classmethod
    def solution(cls) -> int:
        result = 0
        for t_number in triangle_numbers():
            if len(factors(t_number)) > 500:
                result = t_number
                break

        return result
